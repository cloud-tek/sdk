on:
  workflow_call:
    inputs:
      Directory:
        description: 'Directory to build'
        type: string
        required: true
      NetVersion:
        description: 'Version of .NET to use'
        type: string
        required: true
      Build:
        description: 'Build the project'
        type: boolean
        required: false
        default: true
      Pack:
        description: 'Pack the project'
        type: boolean
        required: false
        default: false
      Push:
          description: 'Pack the project'
          type: boolean
          required: false
          default: false
      NuGetApiUrl:
        description: 'NuGet API URL'
        type: string
        required: false
    secrets:
      NuGetUsername:
        required: false
      NuGetPassword:
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    # outputs:
    #   nupkgFilename: ${{ steps.nupkg.outputs.filename }}
    steps:
    - uses: actions/checkout@v3
    - name: setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.NetVersion }}
    - name: dotnet tool restore
      run: dotnet tool restore
    - name: dotnet restore
      if: inputs.Build || inputs.Pack
      run: dotnet restore
    - name: dotnet build
      if: inputs.Build
      run: dotnet build --configuration Release --no-restore
    - name: dotnet pack
      if: inputs.Pack
      run: dotnet pack -v normal -c Release --no-build --include-symbols --include-source -o package
    - uses: actions/upload-artifact@v3
      if: inputs.push
      with:
        name: packages
        path: artifacts/packages

  push:
    runs-on: ubuntu-latest
    if: inputs.push
    needs: [build]
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: packages
        path: packages
    - name: dotnet nuget push
      run: |
        shopt -s globstar
        for file in ./packages/**/*.nupkg; do
          echo $file
        done
      #dotnet nuget push signed/${{needs.build.outputs.nupkgFilename}} --api-key ${{ secrets.nugetApiKey }} --source https://api.nuget.org/v3/index.json
